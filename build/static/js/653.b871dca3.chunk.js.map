{"version":3,"file":"static/js/653.b871dca3.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["dataAttr","property","dataProp","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","node","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","undefined","Provider","useWindow","useContext","resolveContainerRef","ref","getBoundingClientRect","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","_superPropBase","object","hasOwnProperty","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","defaultProps","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}