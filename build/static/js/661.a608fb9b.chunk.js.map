{"version":3,"file":"static/js/661.a608fb9b.chunk.js","mappings":"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","sources":["components/elements/Modal.jsx","components/sections/Cards/ClinicJobCards.jsx","components/pages/ClinicProfile.jsx","../node_modules/@mui/icons-material/AddBox.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/material/utils/createChainedFunction.js","../node_modules/@mui/material/utils/deprecatedPropType.js","../node_modules/@mui/utils/esm/deprecatedPropType.js","../node_modules/@mui/material/utils/requirePropFactory.js","../node_modules/@mui/utils/esm/requirePropFactory.js","../node_modules/@mui/material/utils/setRef.js","../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/material/utils/unsupportedProp.js","../node_modules/@mui/utils/esm/unsupportedProp.js","../node_modules/@mui/material/utils/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ButtonBlueOutlined from \"./ButtonBlueOutlined\";\r\nimport ButtonBlue from \"./ButtonBlue\";\r\n\r\n\r\nconst UserModal = (props) => {\r\n\r\n    const { show, handleClose, handleShow, handleChanges, nameClose, nameOpen } = props\r\n\r\n    return (\r\n        <div>\r\n            <Modal centered show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.text}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <ButtonBlueOutlined onClick={handleClose} name={nameClose}>\r\n                    </ButtonBlueOutlined>\r\n                    <ButtonBlue onClick={handleChanges} name={nameOpen} size='sml'>\r\n                    </ButtonBlue>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserModal","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from 'axios'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ButtonBlue from '../../elements/ButtonBlue';\r\nimport ButtonBlueOutlined from \"../../elements/ButtonBlueOutlined\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CustomContext } from '../../../context/Context';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport UserModal from \"../../elements/Modal\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function JobList() {\r\n\r\n    //use state for getting user info and user from local storage\r\n    const { userClinic, setUserClinic } = useContext(CustomContext)\r\n    const { currentJobInfo, setCurrentJobInfo } = useState('')\r\n    // const { currentUserInfoClinic, setCurrentUserInfoClinic } = useContext(CustomContext)\r\n\r\n    const [posts, setPost] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const navigate = useNavigate()\r\n\r\n    //usestate for edit toggle button\r\n    const [isOpen, setOpen] = React.useState(false);\r\n    //when edit button is clicked, the update form will appear\r\n    const handleToggle = (index) => {\r\n        setOpen(index);\r\n    };\r\n\r\n    //usestate for add job listing button\r\n    const [isOpenAdd, setOpenAdd] = React.useState(false);\r\n    //when add button is clicked, the add form will appear\r\n    const handleToggleAdd = () => {\r\n        setOpenAdd(!isOpenAdd);\r\n    };\r\n\r\n    //usestate for modal\r\n    const [show, setShow] = useState(false);\r\n    //closing and opening modal functions\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    //check if there's user data on page load and show related user's job listing\r\n    useEffect(() => {\r\n        //getting user's data from local storage\r\n        const userClinic = JSON.parse(localStorage.getItem('userClinic'));\r\n        if (userClinic) {\r\n            setUserClinic(userClinic);\r\n\r\n            //getting current user's data based on the id stored in local storage\r\n            const getJobsByClinicId = async () => {\r\n                const res = await axios.get(`https://nz-locum-backend-3a82ed85ab97.herokuapp.com/jobs/search/clinic/${userClinic._id}`);\r\n                console.log(res.data)\r\n                setPost(res.data)\r\n            };\r\n            getJobsByClinicId()\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    //when delete button is clicked, it will take the individual post's id and delete it\r\n    const handleChanges = async (event, postid) => {\r\n\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await axios.delete(`https://nz-locum-backend-3a82ed85ab97.herokuapp.com/jobs/delete/${postid}`);\r\n            window.location.reload()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    //usestate to make new job listing\r\n    const [details, setDetails] = useState({\r\n        job_title: '', location: '', email: '',\r\n        specialities: '', descriptions: '', phone: ''\r\n    })\r\n\r\n    //ref to check if input fields is empty/not\r\n    let myRef = {}\r\n\r\n    //job description min chacater input\r\n    const CHARACTER_LIMIT = 150;\r\n\r\n    //add job button will be disabled until all forms is filled\r\n    function SubmitButton() {\r\n        if (details.job_title && details.location && details.email\r\n            && details.specialities && details.phone && details.descriptions.length >= CHARACTER_LIMIT) {\r\n            return <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2, textTransform: \"none\" }} onClick={() => { myRef.current.reportValidity() }}>Create job listing</Button>\r\n        } else {\r\n            return <Button fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2, textTransform: \"none\" }} onClick={() => { myRef.current.reportValidity() }} disabled>Create job listing</Button>\r\n        };\r\n    };\r\n\r\n    //post function to add new job\r\n    const addNewJob = (event) => {\r\n        event.preventDefault();\r\n\r\n        setError(null)\r\n\r\n        const toSend = new FormData()\r\n        toSend.append('job_title', details.job_title)\r\n        toSend.append('location', details.location)\r\n        toSend.append('email', details.email)\r\n        toSend.append('specialities', details.specialities)\r\n        toSend.append('phone', details.phone)\r\n        toSend.append('descriptions', details.descriptions)\r\n        toSend.append('clinic_id', userClinic._id) //automatically sets the clinic id with the logged in user's id\r\n        console.log(toSend)\r\n\r\n        axios.post('https://nz-locum-backend-3a82ed85ab97.herokuapp.com/jobs/add', toSend, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            window.location.reload()\r\n        })\r\n            .catch((error) => setError(error.response.data.msg))\r\n    };\r\n\r\n\r\n    //function to update job listing\r\n    const handleSubmit = (event, postid) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (posts._id === postid) {\r\n            setCurrentJobInfo(currentJobInfo);\r\n        }\r\n\r\n        setError(null)\r\n\r\n        const data = new FormData(event.currentTarget);\r\n\r\n        const job_title = data.get('job_title') == null ? currentJobInfo.job_title : data.get('job_title');\r\n        const location = data.get('location') == null ? currentJobInfo.location : data.get('location');\r\n        const email = data.get('email') == null ? currentJobInfo.email : data.get('email');\r\n        const specialities = data.get('specialities') == null ? currentJobInfo.specialities : data.get('specialities');\r\n        const descriptions = data.get('descriptions') == null ? currentJobInfo.descriptions : data.get('descriptions');\r\n        const phone = data.get('phone') == null ? currentJobInfo.phone : data.get('phone');\r\n\r\n\r\n        try {\r\n            fetch(`https://nz-locum-backend-3a82ed85ab97.herokuapp.com/jobs/update/${postid}`, {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    job_title: job_title,\r\n                    location: location,\r\n                    email: email,\r\n                    specialities: specialities,\r\n                    descriptions: descriptions,\r\n                    phone: phone,\r\n                })\r\n            }).then(() => {\r\n                window.location.reload()\r\n            }).catch((error) => setError(error))\r\n        } catch (error) {\r\n            console.log(error.msg)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Job Listings</h2>\r\n            <br></br>\r\n            <div className=\"card\">\r\n                <Button variant=\"outlined\" startIcon={<AddBoxIcon />} onClick={handleToggleAdd} sx={{ textTransform: \"none\" }}>\r\n                    Add New Job Listing\r\n                </Button></div>\r\n\r\n            {/* form will show when the edit button is clicked */}\r\n\r\n            {isOpenAdd &&\r\n\r\n                <ThemeProvider theme={theme}>\r\n                    <Container component=\"main\">\r\n                        <CssBaseline />\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 8,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'left',\r\n                                textAlign: 'left'\r\n                            }}\r\n                        >\r\n\r\n                            <h3>Enter Job Listing Details</h3>\r\n                            <Box component=\"form\" noValidate onSubmit={addNewJob} sx={{ mt: 3 }}>\r\n\r\n                                {error ? <h1>{error.toString()}</h1> : null}\r\n\r\n\r\n                                <Grid container spacing={2}>\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            inputRef={myRef}\r\n                                            autoComplete=\"job_title\"\r\n                                            name=\"job_title\"\r\n                                            fullWidth\r\n                                            id=\"job_title\"\r\n                                            label=\"Job Title\"\r\n                                            autoFocus\r\n                                            onChange={e => setDetails({ ...details, job_title: e.target.value })}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            inputRef={myRef}\r\n                                            fullWidth\r\n                                            name=\"email\"\r\n                                            label=\"Email\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            onChange={e => setDetails({ ...details, email: e.target.value })}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            inputRef={myRef}\r\n                                            fullWidth\r\n                                            name=\"phone\"\r\n                                            label=\"Phone\"\r\n                                            type=\"number\"\r\n                                            id=\"phone\"\r\n                                            autoComplete=\"new-phone\"\r\n                                            onChange={e => setDetails({ ...details, phone: e.target.value })}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel id=\"location\">Location*</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"location\"\r\n                                                id=\"location\"\r\n                                                name=\"location\"\r\n                                                required\r\n                                                label=\"Location\"\r\n                                                onChange={e => setDetails({ ...details, location: e.target.value })}\r\n                                            >\r\n                                                <MenuItem value={'Northland'}>Northland</MenuItem>\r\n                                                <MenuItem value={'Auckland'}>Auckland</MenuItem>\r\n                                                <MenuItem value={'Wellington'}>Wellington</MenuItem>\r\n                                                <MenuItem value={'Dunedin'}>Dunedin</MenuItem>\r\n                                                <MenuItem value={'Christchurch'}>Christchurch</MenuItem>\r\n                                                <MenuItem value={'Queenstown'}>Queenstown</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            inputRef={myRef}\r\n                                            name=\"specialities\"\r\n                                            label=\"Specialities\"\r\n                                            type=\"text\"\r\n                                            id=\"specialities\"\r\n                                            autoComplete=\"specialities\"\r\n                                            multiline\r\n                                            rows={2}\r\n                                            onChange={e => setDetails({ ...details, specialities: e.target.value })}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            inputRef={myRef}\r\n                                            name=\"descriptions\"\r\n                                            label=\"Descriptions\"\r\n                                            type=\"text\"\r\n                                            id=\"descriptions\"\r\n                                            inputProps={{\r\n                                                minlength: CHARACTER_LIMIT\r\n                                            }}\r\n                                            helperText={`${details.descriptions.length}/${CHARACTER_LIMIT}`}\r\n                                            multiline\r\n                                            rows={15}\r\n                                            onChange={e => setDetails({ ...details, descriptions: e.target.value })}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <SubmitButton />\r\n                                        <br></br>\r\n                                        <br></br>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>\r\n                    </Container>\r\n                </ThemeProvider>\r\n            }\r\n\r\n            {/* job list begins here */}\r\n            {posts.map((post, index) =>\r\n                <div className=\"col-12 mt-3\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-horizontal\">\r\n                            <div className=\"card-body\" id='card-body'>\r\n                                <h4 className=\"card-title\">{post.job_title}</h4>\r\n                                <p className=\"card-text\">\r\n                                    {post.location}\r\n                                </p>\r\n                                <p>\r\n                                    <b>Email: </b>{post.email}\r\n                                </p>\r\n                                <p>\r\n                                    <b>Phone: </b>{post.phone}\r\n                                </p>\r\n                                <p>\r\n                                    <b>Specialities: </b>{post.specialities}\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"card-body\" id='card-body'>\r\n                                <p className=\"card-text\">\r\n                                    <b>Descriptions: </b>{post.descriptions.slice(0, 250)}...\r\n                                </p>\r\n                                <ButtonBlue onClick={() => handleToggle(index)} name=\"Edit Job Listing\" size='sml' style={{ marginRight: 30, marginBottom: 10 }}></ButtonBlue>\r\n                                <ButtonBlueOutlined onClick={() => handleShow()} name=\"Delete Job Listing\" size='sml' style={{ marginRight: 30, marginBottom: 10 }}></ButtonBlueOutlined>\r\n                                <ButtonBlue onClick={() => { navigate(`/job-search/${post._id}`) }} name=\"See Details\" size='sml' style={{ marginRight: 30, marginBottom: 10 }}></ButtonBlue>\r\n\r\n                                {/* modal for job deletion*/}\r\n                                <UserModal show={show} handleClose={handleClose} handleShow={handleShow} handleChanges={(event) => handleChanges(event, post._id)} nameClose='Cancel' nameOpen='Delete Job Listing'\r\n                                    title='Delete Job Listing' text='Are you sure you want to delete this job listing? You can not undo this action' />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {/* form will show when the edit button is clicked */}\r\n\r\n                    {index === isOpen &&\r\n\r\n                        <ThemeProvider theme={theme}>\r\n                            <Container component=\"main\">\r\n                                <CssBaseline />\r\n                                <Box\r\n                                    sx={{\r\n                                        marginTop: 8,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'left',\r\n                                        textAlign: 'left'\r\n                                    }}\r\n                                >\r\n\r\n                                    <h3>Edit Job Listing</h3>\r\n                                    <Box component=\"form\" noValidate onSubmit={(event) => handleSubmit(event, post._id)} sx={{ mt: 3 }}>\r\n\r\n                                        {error ? <h1>{error.toString()}</h1> : null}\r\n\r\n\r\n                                        <Grid container spacing={2}>\r\n\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    autoComplete=\"job_title\"\r\n                                                    name=\"job_title\"\r\n                                                    fullWidth\r\n                                                    id=\"job_title\"\r\n                                                    label=\"Job Title\"\r\n                                                    defaultValue={post.job_title}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    name=\"email\"\r\n                                                    label=\"Email\"\r\n                                                    type=\"email\"\r\n                                                    id=\"email\"\r\n                                                    autoComplete=\"email\"\r\n                                                    defaultValue={post.email}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    name=\"phone\"\r\n                                                    label=\"Phone\"\r\n                                                    type=\"number\"\r\n                                                    id=\"phone\"\r\n                                                    autoComplete=\"new-phone\"\r\n                                                    defaultValue={post.phone}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel id=\"location\">Location*</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"location\"\r\n                                                        id=\"location\"\r\n                                                        name=\"location\"\r\n                                                        required\r\n                                                        label=\"Location\"\r\n                                                        defaultValue={post.location}\r\n                                                    >\r\n                                                        <MenuItem value={'Northland'}>Northland</MenuItem>\r\n                                                        <MenuItem value={'Auckland'}>Auckland</MenuItem>\r\n                                                        <MenuItem value={'Wellington'}>Wellington</MenuItem>\r\n                                                        <MenuItem value={'Dunedin'}>Dunedin</MenuItem>\r\n                                                        <MenuItem value={'Christchurch'}>Christchurch</MenuItem>\r\n                                                        <MenuItem value={'Queenstown'}>Queenstown</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    name=\"specialities\"\r\n                                                    label=\"Specialities\"\r\n                                                    type=\"text\"\r\n                                                    id=\"specialities\"\r\n                                                    autoComplete=\"specialities\"\r\n                                                    multiline\r\n                                                    rows={2}\r\n                                                    defaultValue={post.specialities}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    name=\"descriptions\"\r\n                                                    label=\"Descriptions\"\r\n                                                    type=\"text\"\r\n                                                    id=\"descriptions\"\r\n                                                    inputProps={{\r\n                                                        minlength: CHARACTER_LIMIT\r\n                                                    }}\r\n                                                    helperText={`${post.descriptions.length}/${CHARACTER_LIMIT}`}\r\n                                                    multiline\r\n                                                    rows={15}\r\n                                                    defaultValue={post.descriptions}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <ButtonBlueOutlined onClick={handleToggle} name=\"Cancel\" size='sml' style={{ marginRight: 30 }}></ButtonBlueOutlined>\r\n                                                <ButtonBlue name=\"Save Changes\" type=\"submit\" size='sml'></ButtonBlue>\r\n                                                <br></br>\r\n                                                <br></br>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </ThemeProvider>\r\n                    }\r\n\r\n                </div>\r\n\r\n            )}\r\n\r\n\r\n            {error ? <Alert key='danger' variant='danger' id='cards'> Error retrieving data </Alert> : null}\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { CustomContext } from \"../../context/Context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PageHeader from \"../elements/PageHeader\";\r\nimport ProfileBanner from \"../../images/profile-banner.png\";\r\nimport {\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n} from \"mdb-react-ui-kit\";\r\nimport ButtonBlue from \"../elements/ButtonBlue\";\r\nimport ButtonBlueOutlined from \"../elements/ButtonBlueOutlined\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport axios from \"axios\";\r\nimport UserModal from \"../elements/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport ClinicJobCards from \"../sections/Cards/ClinicJobCards\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Loading from \"../elements/Loading\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function DoctorProfile() {\r\n  const FileRef = React.useRef();\r\n  const navigate = useNavigate();\r\n\r\n  //use state for getting user info and user from local storage\r\n  const { userClinic, setUserClinic } = useContext(CustomContext);\r\n  const { currentUserInfoClinic, setCurrentUserInfoClinic } =\r\n    useContext(CustomContext);\r\n\r\n  //usestate for edit toggle button\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  //when edit button is clicked, the update form will appear\r\n  const handleToggle = () => {\r\n    setOpen(!isOpen);\r\n  };\r\n\r\n  //usestate for modal\r\n  const [show, setShow] = useState(false);\r\n  //closing and opening modal functions\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //when modal delete button is clicked, it will delete the user profile data and all jobs data connected by the clinic id\r\n  const handleChanges = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const urls = [\r\n        `https://nz-locum-backend-3a82ed85ab97.herokuapp.com/clinics/delete/${userClinic._id}`,\r\n        `https://nz-locum-backend-3a82ed85ab97.herokuapp.com/jobs/delete/clinic/${userClinic._id}`,\r\n      ];\r\n\r\n      const deleteRequests = urls.map((url) => {\r\n        return axios.delete(url);\r\n      });\r\n\r\n      await axios.all(deleteRequests);\r\n\r\n      // Handle success\r\n      localStorage.clear(); //clear user data on sign-out\r\n      setCurrentUserInfoClinic({});\r\n      navigate(\"/\");\r\n      window.location.reload();\r\n      console.log(\"Delete requests completed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error during delete requests:\", error);\r\n    }\r\n  };\r\n\r\n  //check if there's user data on page load\r\n  useEffect(() => {\r\n    //getting user's data from local storage\r\n    const userClinic = JSON.parse(localStorage.getItem(\"userClinic\"));\r\n    if (userClinic) {\r\n      setUserClinic(userClinic);\r\n\r\n      //getting current user's data based on the id stored in local storage\r\n      const getUserById = async () => {\r\n        const res = await axios.get(\r\n          `https://nz-locum-backend-3a82ed85ab97.herokuapp.com/clinics/search/${userClinic._id}`\r\n        );\r\n        setCurrentUserInfoClinic(res.data.currentUserInfoClinic[0]);\r\n        console.log(res.data.currentUserInfoClinic[0]);\r\n      };\r\n      getUserById();\r\n    }\r\n  }, []);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setError(null);\r\n    setUploading(true);\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    console.log(data.get(\"business_name\"));\r\n\r\n    const business_name =\r\n      data.get(\"business_name\") || currentUserInfoClinic.business_name;\r\n    const email = data.get(\"email\") || currentUserInfoClinic.email;\r\n    let password = data.get(\"password\"); // get the entered password\r\n    const specialities =\r\n      data.get(\"specialities\") || currentUserInfoClinic.specialities;\r\n    const phone = data.get(\"phone\") || currentUserInfoClinic.phone;\r\n    const address = data.get(\"address\") || currentUserInfoClinic.address;\r\n    const city = data.get(\"city\") || currentUserInfoClinic.city;\r\n    const hours = data.get(\"hours\") || currentUserInfoClinic.hours;\r\n    const imageKey = FileRef.current.files[0] || currentUserInfoClinic.imageKey;\r\n\r\n    const toSend = new FormData();\r\n    toSend.append(\"business_name\", business_name);\r\n    toSend.append(\"email\", email);\r\n    toSend.append(\"specialities\", specialities);\r\n    toSend.append(\"phone\", phone);\r\n    toSend.append(\"city\", city);\r\n    toSend.append(\"hours\", hours);\r\n    toSend.append(\"address\", address);\r\n    toSend.append(\"imageKey\", imageKey);\r\n\r\n    // Send password only if it was updated\r\n    if (password && password !== currentUserInfoClinic.password) {\r\n      toSend.append(\"password\", password); // append new password\r\n    }\r\n\r\n    try {\r\n      fetch(\r\n        `https://nz-locum-backend-3a82ed85ab97.herokuapp.com/clinics/update/${userClinic._id}`,\r\n        {\r\n          method: \"POST\",\r\n          body: toSend,\r\n        }\r\n      )\r\n        .then(() => {\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => setError(error));\r\n    } catch (error) {\r\n      console.log(error.msg);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  //when uploading image show the uploading animation\r\n  if (uploading === true) {\r\n    return (\r\n      <>\r\n        <Loading />\r\n      </>\r\n    );\r\n  }\r\n  // if there's a user but the get current info hasn't loaded yet then show loading screen\r\n  if (userClinic && !currentUserInfoClinic) {\r\n    return (\r\n      <>\r\n        <Loading />\r\n      </>\r\n    );\r\n  }\r\n  // if there's a user and user's info, show their profile\r\n  if (userClinic && currentUserInfoClinic) {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          maoriTitle=\"Tō Kōtaha\"\r\n          englishTitle=\"Your Profile\"\r\n          background={ProfileBanner}\r\n        />\r\n\r\n        <MDBContainer className=\"py-5\">\r\n          <MDBRow>\r\n            <MDBCol lg=\"4\">\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardBody className=\"text-center\">\r\n                  <MDBCardImage\r\n                    src={currentUserInfoClinic.imageKey}\r\n                    alt=\"avatar\"\r\n                    className=\"rounded\"\r\n                    style={{\r\n                      width: \"250px\",\r\n                      height: \"200px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    fluid\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <h3>{currentUserInfoClinic.business_name}</h3>\r\n                  <p className=\"text-muted mb-4\">\r\n                    {currentUserInfoClinic.address},{\" \"}\r\n                    {currentUserInfoClinic.city}\r\n                  </p>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol lg=\"8\">\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardBody>\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Business Name</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.business_name}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Email</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.email}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Phone</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.phone}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Specialities</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.specialities}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Address</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.address}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Hours</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">\r\n                        {currentUserInfoClinic.hours}\r\n                      </MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              <ButtonBlue\r\n                name=\"Edit Details\"\r\n                style={{ marginRight: 30 }}\r\n                onClick={handleToggle}\r\n                size=\"sml\"\r\n              ></ButtonBlue>\r\n              <ButtonBlueOutlined\r\n                name=\"Delete Profile\"\r\n                style={{ marginRight: 30 }}\r\n                onClick={() => handleShow()}\r\n                size=\"sml\"\r\n              ></ButtonBlueOutlined>\r\n\r\n              {/* modal for user deletion*/}\r\n              <UserModal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                handleShow={handleShow}\r\n                handleChanges={handleChanges}\r\n                nameClose=\"Cancel\"\r\n                nameOpen=\"Delete Profile\"\r\n                title=\"We are sad to see you go! 😔\"\r\n                text=\"Are you sure you want to delete your profile? You can not undo this action\"\r\n              />\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          {/* form will show when the edit button is clicked */}\r\n\r\n          {isOpen && (\r\n            <ThemeProvider theme={theme}>\r\n              <Container component=\"main\">\r\n                <CssBaseline />\r\n                <Box\r\n                  sx={{\r\n                    marginTop: 8,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"left\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  <h3>Edit Your Details</h3>\r\n                  <Box\r\n                    component=\"form\"\r\n                    noValidate\r\n                    onSubmit={handleSubmit}\r\n                    sx={{ mt: 3 }}\r\n                  >\r\n                    {error ? <h1>{error.toString()}</h1> : null}\r\n\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <Card>\r\n                          <div id=\"cards\">\r\n                            <input ref={FileRef} type=\"file\" />\r\n                            <div className=\"small text-muted mt-2\">\r\n                              Upload your profile picture. Max file size 1 MB\r\n                            </div>\r\n                          </div>\r\n                        </Card>\r\n                      </Grid>\r\n                      <br></br>\r\n\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          autoComplete=\"business_name\"\r\n                          name=\"business_name\"\r\n                          fullWidth\r\n                          id=\"business_name\"\r\n                          label=\"Business Name\"\r\n                          autoFocus\r\n                          defaultValue={currentUserInfoClinic.business_name}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"email\"\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          autoComplete=\"email\"\r\n                          defaultValue={currentUserInfoClinic.email}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          type=\"password\"\r\n                          id=\"password\"\r\n                          autoComplete=\"new-password\"\r\n                          placeholder={\"Your password\"}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          name=\"phone\"\r\n                          label=\"Phone\"\r\n                          type=\"number\"\r\n                          id=\"phone\"\r\n                          autoComplete=\"new-phone\"\r\n                          defaultValue={currentUserInfoClinic.phone}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          name=\"address\"\r\n                          label=\"Address\"\r\n                          type=\"text\"\r\n                          id=\"address\"\r\n                          autoComplete=\"address\"\r\n                          defaultValue={currentUserInfoClinic.address}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"city\">City*</InputLabel>\r\n                          <Select\r\n                            labelId=\"city\"\r\n                            id=\"city\"\r\n                            required\r\n                            label=\"City\"\r\n                            name=\"city\"\r\n                            defaultValue={currentUserInfoClinic.city}\r\n                          >\r\n                            <MenuItem value={\"Northland\"}>Northland</MenuItem>\r\n                            <MenuItem value={\"Auckland\"}>Auckland</MenuItem>\r\n                            <MenuItem value={\"Wellington\"}>Wellington</MenuItem>\r\n                            <MenuItem value={\"Dunedin\"}>Dunedin</MenuItem>\r\n                            <MenuItem value={\"Christchurch\"}>\r\n                              Christchurch\r\n                            </MenuItem>\r\n                            <MenuItem value={\"Queenstown\"}>Queenstown</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          name=\"hours\"\r\n                          label=\"Hours\"\r\n                          type=\"text\"\r\n                          id=\"hours\"\r\n                          autoComplete=\"hours\"\r\n                          defaultValue={currentUserInfoClinic.hours}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          name=\"specialities\"\r\n                          label=\"Specialities\"\r\n                          type=\"text\"\r\n                          id=\"specialities\"\r\n                          autoComplete=\"specialities\"\r\n                          multiline\r\n                          rows={2}\r\n                          defaultValue={currentUserInfoClinic.specialities}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <ButtonBlue\r\n                          name=\"Save Changes\"\r\n                          type=\"submit\"\r\n                          style={{ marginBottom: 50 }}\r\n                          size=\"sml\"\r\n                        ></ButtonBlue>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Box>\r\n              </Container>\r\n            </ThemeProvider>\r\n          )}\r\n\r\n          {/* job listings */}\r\n          <ClinicJobCards />\r\n        </MDBContainer>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // if there's no user, show the login message\r\n  return (\r\n    <div id=\"card-page\">\r\n      <br></br>\r\n      <br></br>\r\n      <Alert id=\"cards\">Please sign in</Alert>\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","import { unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nexport default createChainedFunction;","import { unstable_deprecatedPropType as deprecatedPropType } from '@mui/utils';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n    return null;\n  };\n}","import { unstable_requirePropFactory as requirePropFactory } from '@mui/utils';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}","import { unstable_setRef as setRef } from '@mui/utils';\nexport default setRef;","import { unstable_useId as useId } from '@mui/utils';\nexport default useId;","import { unstable_unsupportedProp as unsupportedProp } from '@mui/utils';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n  const propFullNameSafe = propFullName || propName;\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n  return null;\n}","import { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/className';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';\n// TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    }\n    ClassNameGenerator.configure(generator);\n  }\n};","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["props","show","handleClose","handleChanges","handleShow","nameClose","nameOpen","centered","onHide","closeButton","title","text","onClick","name","size","theme","createTheme","JobList","useContext","CustomContext","userClinic","setUserClinic","useState","currentJobInfo","setCurrentJobInfo","posts","setPost","error","setError","navigate","useNavigate","React","isOpen","setOpen","handleToggle","index","isOpenAdd","setOpenAdd","setShow","useEffect","JSON","parse","localStorage","getItem","getJobsByClinicId","axios","_id","res","console","log","data","event","postid","preventDefault","window","location","reload","job_title","email","specialities","descriptions","phone","details","setDetails","myRef","CHARACTER_LIMIT","SubmitButton","length","Button","type","fullWidth","variant","sx","mt","mb","textTransform","current","reportValidity","disabled","className","startIcon","AddBox","ThemeProvider","Container","component","CssBaseline","Box","marginTop","display","flexDirection","alignItems","textAlign","noValidate","onSubmit","toSend","FormData","append","headers","Accept","then","response","catch","msg","toString","Grid","container","spacing","item","xs","sm","TextField","inputRef","autoComplete","id","label","autoFocus","onChange","e","target","value","FormControl","InputLabel","Select","labelId","required","MenuItem","multiline","rows","inputProps","minlength","helperText","map","post","slice","ButtonBlue","style","marginRight","marginBottom","ButtonBlueOutlined","currentTarget","get","fetch","method","body","stringify","handleSubmit","defaultValue","Alert","DoctorProfile","FileRef","currentUserInfoClinic","setCurrentUserInfoClinic","urls","deleteRequests","url","clear","getUserById","uploading","setUploading","Loading","PageHeader","maoriTitle","englishTitle","background","ProfileBanner","lg","src","imageKey","alt","width","height","objectFit","fluid","business_name","address","city","hours","password","files","Card","ref","placeholder","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","Object","defineProperty","enumerable","_utils","createSvgIcon","validator","reason","componentNameInError","Component","propName","componentName","propFullName","unstable_ClassNameGenerator","configure","generator","ClassNameGenerator","module","obj","__esModule"],"sourceRoot":""}